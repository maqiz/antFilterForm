import React, { PureComponent } from 'react'
import { Tree } from 'antd'
const { TreeNode } = Tree

/**
 * @class AntdTree
 * @extends {PureComponent}
 * @param {Array} treeData 节点初始化数据
 * @param {Function} fetchTressData 节点数据获取接口方法   //返回的是一个promise对象，value为ant design tree组件需要的数据结构
 * @param {Function} onSelect 节点选中方法
 * @param {Array} defaultExpandedKeys 默认选中节点 || ['0']
 */

class AsncyTree extends PureComponent {

    state = {
        treeData: this.props.treeData || []
    }

    //异步加载加载tree
    onLoadData = treeNode => new Promise((resolve) => {
        const { fetchTressData } = this.props
        if (treeNode.props.children) {
            resolve()
            return
        }
        
        fetchTressData(treeNode.props.eventKey).then(res => {
            if (res) {
                treeNode.props.dataRef.children = res
                this.setState({
                    treeData: [...this.state.treeData]
                })
                resolve()
            }
        }).catch(err => {
            console.log(err)
        })
    })

    renderTreeNodes = data => data.map((item) => {
        if (item.children) {
            return (
                <TreeNode title={item.title} key={item.key} dataRef={item}>
                    {this.renderTreeNodes(item.children)}
                </TreeNode>
            )
        }
        
        return <TreeNode {...item} dataRef={item} />
    })

    render() {
        const { treeData } = this.state
        const { onSelect, defaultExpandedKeys } = this.props
        return (
            <Tree loadData={this.onLoadData} onSelect={onSelect} defaultExpandedKeys={defaultExpandedKeys || ['0']}>
                {this.renderTreeNodes(treeData)}
            </Tree>
        )
    }
}

export default AsncyTree

